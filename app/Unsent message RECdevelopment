 private void processMessage(String paramValue, Context context) {
        String unresolvedFilePath = context.getFilesDir() + "/UnresolvedIds.txt";
 
        String[] operations = paramValue.split("Operation\\(");
        for (String operation : operations) {
            if (operation.trim().isEmpty()) continue; 
            String revision = null;
            String createdTime = null;
            String type = null;
            String from = null;
            String to = null;
            String param12 = null;
            String param22 = null;
            String operationContent = null;
            String serverId = null;
            String talkId = null;
           
            String[] parts = operation.split(",");
            for (String part : parts) {
                part = part.trim(); 
                if (part.startsWith("param1:")) {
                    talkId = part.substring("param1:".length()).trim();
                } else if (part.startsWith("param2:")) {
                    serverId = part.substring("param2:".length()).trim();
                } else if (part.startsWith("revision:")) {
                    revision = part.substring("revision:".length()).trim();
                } else if (part.startsWith("createdTime:")) {
                    createdTime = part.substring("createdTime:".length()).trim();
                } else if (part.startsWith("type:")) {
                    type = part.substring("type:".length()).trim();
                } else if (part.startsWith("from:")) {
                    from = part.substring("from:".length()).trim();
                } else if (part.startsWith("to:")) {
                    to = part.substring("to:".length()).trim();
                } else if (part.startsWith("contentMetadata:")) {
                    param12 = part.substring("contentMetadata:".length()).trim();
                } else if (part.startsWith("operationContent:")) {
                    operationContent = part.substring("operationContent:".length()).trim();
                }
            }

            if (serverId != null && talkId != null) {
                String content = queryDatabase("SELECT content FROM chat_history WHERE server_id=?", serverId);
                String imageCheck = queryDatabase("SELECT attachement_image FROM chat_history WHERE server_id=?", serverId);
                String timeEpochStr = queryDatabase("SELECT created_time FROM chat_history WHERE server_id=?", serverId);
                String timeFormatted = formatMessageTime(timeEpochStr);
                String groupName = queryDatabase("SELECT name FROM groups WHERE id=?", talkId);
                String talkName = queryDatabase("SELECT chat_name FROM chat WHERE chat_id=?", talkId);

                String name = (groupName != null ? groupName : (talkName != null ? talkName : "No Name"));

             
                if (content == null || name.equals("No Name")) {
                    saveUnresolvedIds(serverId, talkId, unresolvedFilePath);
                }

                String media = queryDatabase("SELECT attachement_type FROM chat_history WHERE server_id=?", serverId);
                String logEntry = (timeFormatted != null ? timeFormatted : "No Time: ")
                        + name
                        + ": " + (content != null ? content : "No content:" + serverId)
                        + (imageCheck != null && imageCheck.equals("1") ? " 画像" : "")
                        + (media != null && media.equals("7") ? " スタンプ" : (media != null && media.equals("2") ? " 動画" : ""));

        
                File originalFile = new File(context.getFilesDir(), "Test.txt");
                try (BufferedWriter writer = new BufferedWriter(new FileWriter(originalFile, true))) {
                    writer.write(logEntry);
                    writer.newLine();
                } catch (IOException e) {
                    XposedBridge.log("IOException occurred while writing to file: " + e.getMessage());
                }
            }
        }
    }
