name: Build and Release

on:
  release:
    types: [created]

jobs:
  build:
    name: Build and Patch
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set environments
        run: |
          {
            echo "version=${{ github.event.release.tag }}"
            echo "line_ver_code=$(grep HOOK_TARGET_VERSION app/build.gradle | awk '{print $4}' | tr -d \'\")"
            echo "commit=$(echo ${{ github.sha }} | cut -c-7)"
            echo "repo=$(echo ${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/})"
          } >> $GITHUB_ENV

      - name: Set LINE Original Version Name
        run: echo "line_ver=$(echo '${{ env.line_ver_code }}' | awk '{print substr($0,1,2)"."substr($0,3,2)"."int(substr($0,5,1))}')" >> $GITHUB_ENV

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: |
          echo "${{ secrets.STORE_FILE }}" | base64 -d > app/release.jks
          export STORE_PASSWORD="${{ secrets.STORE_PASSWORD }}"
          export KEY_ALIAS="${{ secrets.KEY_ALIAS }}"
          export KEY_PASSWORD="${{ secrets.KEY_PASSWORD }}"
          ./gradlew assembleRelease --no-daemon --stacktrace
          cp -f app/build/outputs/apk/release/app-release.apk ${{ env.repo }}-${{ env.version }}.apk

      - name: Patch for arm64-v8a
        run: |
          apk_url="https://d.apkpure.com/b/XAPK/jp.naver.line.android?versionCode=${{ env.line_ver_code }}&nc=arm64-v8a&sv=28"
          echo "Patching for arm64-v8a..."
          echo "https://github.com/JingMatrix/LSPatch/releases/latest/download/lspatch.jar" > conf
          echo "$apk_url" >> conf
          aria2c --no-conf -x16 -s16 -R -m0 -V --async-dns=false -iconf
          java -jar lspatch.jar "line-${{ env.line_ver }}.apk" -m "app/build/outputs/apk/release/app-release.apk" -l 2 -v
          mv "line-${{ env.line_ver }}-lspatched.apk" "LINE-${{ env.line_ver }}-arm64-v8a-lspatched.apk"

      - name: Patch for armeabi-v7a
        run: |
          apk_url="https://line-android-universal-download.line-scdn.net/line-14.19.1.apk"
          echo "Patching for armeabi-v7a..."
          echo "https://github.com/JingMatrix/LSPatch/releases/latest/download/lspatch.jar" > conf
          echo "$apk_url" >> conf
          aria2c --no-conf -x16 -s16 -R -m0 -V --async-dns=false -iconf
          java -jar lspatch.jar "line-${{ env.line_ver }}.apk" -m "app/build/outputs/apk/release/app-release.apk" -l 2 -v
          mv "line-${{ env.line_ver }}-lspatched.apk" "LINE-${{ env.line_ver }}-armeabi-v7a-lspatched.apk"

      - name: Patch for both architectures
        run: |
          apk_url="https://www.apkmirror.com/apk/line-corporation/line/line-14-19-1-release/line-calls-messages-14-19-1-android-apk-download/download/?key=168fc2e8af120111c350b2943dd89a3841f1546b"
          echo "Patching for both architectures..."
          echo "https://github.com/JingMatrix/LSPatch/releases/latest/download/lspatch.jar" > conf
          echo "$apk_url" >> conf
          aria2c --no-conf -x16 -s16 -R -m0 -V --async-dns=false -iconf
          java -jar lspatch.jar "line-${{ env.line_ver }}.apk" -m "app/build/outputs/apk/release/app-release.apk" -l 2 -v
          mv "line-${{ env.line_ver }}-lspatched.apk" "LINE-${{ env.line_ver }}-both-lspatched.apk"

      - name: Release arm64-v8a
        run: |
          echo "Releasing arm64-v8a version..."
          gh release create ${{ env.version }} LINE-${{ env.line_ver }}-arm64-v8a-lspatched.apk --title "Release ${{ env.version }} (arm64-v8a)" --notes "## 対応するLINEのバージョン\n${{ env.line_ver }}"

      - name: Release armeabi-v7a
        run: |
          echo "Releasing armeabi-v7a version..."
          gh release create ${{ env.version }} LINE-${{ env.line_ver }}-armeabi-v7a-lspatched.apk --title "Release ${{ env.version }} (armeabi-v7a)" --notes "## 対応するLINEのバージョン\n${{ env.line_ver }}"

      - name: Release both architectures
        run: |
          echo "Releasing both architectures version..."
          gh release create ${{ env.version }} LINE-${{ env.line_ver }}-both-lspatched.apk --title "Release ${{ env.version }} (both)" --notes "## 対応するLINEのバージョン\n${{ env.line_ver }}"
