name: LIMEビルドとパッチ

on:
  workflow_dispatch:
    inputs:
      release:
        description: 'リリースビルドを作成しますか？'
        required: true
        default: 'false'
      lspatch:
        description: 'LSPatchを適用しますか？'
        required: true
        default: 'true'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: リポジトリのチェックアウト
      uses: actions/checkout@v2

    - name: Javaのセットアップ
      uses: actions/setup-java@v2
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Gradleのセットアップ
      uses: gradle/actions/setup-gradle@v2
      with:
        gradle-version: '7.6.1'

    - name: Gradleでビルド
      run: |
        if [ "${{ inputs.release }}" == "true" ]; then
          echo "${{ secrets.STORE_FILE }}" | base64 -d > app/release.jks
          export STORE_PASSWORD="${{ secrets.STORE_PASSWORD }}"
          export KEY_ALIAS="${{ secrets.KEY_ALIAS }}"
          export KEY_PASSWORD="${{ secrets.KEY_PASSWORD }}"
          ./gradlew assembleRelease --no-daemon --stacktrace
          cp -f app/build/outputs/apk/release/app-release.apk ${{ env.repo }}-${{ env.version }}.apk
        else
          ./gradlew assembleDebug --no-daemon --stacktrace
        fi

    - name: APK出力のリスト表示
      run: |
        echo "APK出力のリスト表示:"
        ls -la app/build/outputs/apk/debug/

    - name: LSPatch
      if: github.event.inputs.lspatch == 'true'
      run: |
        cat << EOF > conf
        https://github.com/JingMatrix/LSPatch/releases/latest/download/lspatch.jar
        out=lspatch.jar
        https://dw.uptodown.net/dwn/EPg68xzS-22jffuYiEmWRTQoDPmpdIQpQjN7cd7jPOby7Pm84VwTQufPPdGJPTQ6x6WalMPFSXGvECpOG2BwqRhn6PSKnad9EZ3dKgvBC5lqcC33qVzXJJOeEGqT3Rs4/KuUd2YWGcEh4w6TG6IPUPWpcdjUYtJXZuGpV82jZWrp-N4TH7iVJ6V01iU5lbY_cUvwJucl22BSGqs5gPKg5mLGRnivYa3MTynb4taJkpfUB7_tUxlhuaVCuV2n_1_Lv/cSkXM9sGvQmHzAM9SWD4Mz_V0X6KChgaIPOaZYqhCPoAQ7AmBBh6o8h2krytqHO4/line-14-16-0.apk
        EOF
        echo "APKをダウンロード中..."
        aria2c --no-conf -x16 -s16 -R -m0 -V --async-dns=false -i conf || { echo "ダウンロード失敗"; exit 1; }
        echo "LIMEにパッチを当てています..."
        java -jar lspatch.jar "line-14-16-0.apk" -m "app/build/outputs/apk/debug/app-debug.apk" -l 2 -v || { echo "パッチ失敗"; exit 1; }

    - name: 生成されたAPKファイルのリスト表示
      run: |
        echo "生成されたAPKファイル:"
        ls -la line-*-lspatched.apk || { echo "生成されたAPKファイルのリスト表示失敗"; exit 1; }

    - name: Upload Patched LINE APK
      if: github.event.inputs.lspatch == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: LINE-${{ env.line_ver }}@${{ env.commit }}
        path: line-${{ env.line_ver }}-*-lspatched.apk
        if-no-files-found: error

    - name: Release
      if: github.event.inputs.release == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.version }}
        draft: false
        prerelease: false
        files: |
          ${{ env.repo }}-${{ env.version }}.apk
          line-${{ env.line_ver }}-*-lspatched.apk
        body: |
          # 更新内容
          
          ## 対応するLINEのバージョン
          ${{ env.line_ver }}
          
          ### 差分
          https://github.com/${{ github.repository }}/compare/${{ steps.previous.outputs.tag }}...${{ env.version }}
